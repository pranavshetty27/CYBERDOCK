# -*- coding: utf-8 -*-
"""mfa_streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12n3ga_7PA0b0ACCU-wzedM2gopEyiB4Q
"""

import smtplib
import random
import string
import streamlit as st

# Function to generate a 6-digit OTP
def generate_otp():
    return ''.join(random.choices(string.digits, k=6))

# Function to send OTP via email
def send_otp(sender_email, sender_password, receiver_email, otp):
    try:
        server = smtplib.SMTP("smtp.gmail.com", 587)
        server.starttls()
        server.login(sender_email, sender_password)

        subject = "Your OTP for Authentication"
        body = f"Your One-Time Password (OTP) is: {otp}. It is valid for 5 minutes."
        message = f"Subject: {subject}\n\n{body}"

        server.sendmail(sender_email, receiver_email, message)
        server.quit()
        return True
    except smtplib.SMTPAuthenticationError:
        return "Authentication Error: Check your email & app password."
    except Exception as e:
        return f"Error sending OTP: {e}"

# Streamlit UI
st.title("üîê Multi-Factor Authentication (MFA)")

# User input fields
sender_email = st.text_input("Enter your Gmail ID:")
sender_password = st.text_input("Enter your Google App Password:", type="password")
receiver_email = st.text_input("Enter recipient email for OTP:")

if st.button("Send OTP"):
    if sender_email and sender_password and receiver_email:
        otp = generate_otp()
        st.session_state["otp"] = otp  # Store OTP in session state
        result = send_otp(sender_email, sender_password, receiver_email, otp)

        if result is True:
            st.success(f"‚úÖ OTP sent successfully to {receiver_email}")
        else:
            st.error(result)
    else:
        st.warning("Please fill in all fields.")

# OTP Verification
otp_input = st.text_input("Enter OTP received:", type="password")
if st.button("Verify OTP"):
    if "otp" in st.session_state and otp_input == st.session_state["otp"]:
        st.success("üéâ Authentication Successful!")
    else:
        st.error("‚ùå Incorrect OTP. Try again.")

